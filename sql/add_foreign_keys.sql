-- SQL Server Foreign Keys Addition Script
-- Run this AFTER importing CSV data manually
-- Generated by export_sqlite_to_csv.py
-- Date: 2025-10-27 23:52:06.921922

-- ตั้งค่า Database
USE DrillingDatabase;
GO

-- เพิ่ม Foreign Keys หลังจากนำเข้าข้อมูลแล้ว
-- ตรวจสอบว่ามีข้อมูลในตารางก่อนเพิ่ม Foreign Key

-- เพิ่ม Foreign Key สำหรับ lithology_logs -> collars
IF EXISTS (SELECT 1 FROM collars WHERE hole_id IS NOT NULL)
BEGIN
    ALTER TABLE lithology_logs
    ADD CONSTRAINT FK_LITHOLOGY_LOGS_COLLARS 
    FOREIGN KEY (hole_id) REFERENCES collars(hole_id);
    PRINT 'Added FK_LITHOLOGY_LOGS_COLLARS';
END
ELSE
BEGIN
    PRINT 'Warning: No data in collars table. Skipping FK_LITHOLOGY_LOGS_COLLARS';
END

-- เพิ่ม Foreign Key สำหรับ lithology_logs -> rock_types
IF EXISTS (SELECT 1 FROM rock_types WHERE rock_code IS NOT NULL)
BEGIN
    ALTER TABLE lithology_logs
    ADD CONSTRAINT FK_LITHOLOGY_LOGS_ROCK_TYPES 
    FOREIGN KEY (rock_code) REFERENCES rock_types(rock_code);
    PRINT 'Added FK_LITHOLOGY_LOGS_ROCK_TYPES';
END
ELSE
BEGIN
    PRINT 'Warning: No data in rock_types table. Skipping FK_LITHOLOGY_LOGS_ROCK_TYPES';
END

-- เพิ่ม Foreign Key สำหรับ sample_analyses -> collars
IF EXISTS (SELECT 1 FROM collars WHERE hole_id IS NOT NULL)
BEGIN
    ALTER TABLE sample_analyses
    ADD CONSTRAINT FK_SAMPLE_ANALYSES_COLLARS 
    FOREIGN KEY (hole_id) REFERENCES collars(hole_id);
    PRINT 'Added FK_SAMPLE_ANALYSES_COLLARS';
END
ELSE
BEGIN
    PRINT 'Warning: No data in collars table. Skipping FK_SAMPLE_ANALYSES_COLLARS';
END

-- ตรวจสอบ Foreign Keys ที่เพิ่มแล้ว
SELECT 
    fk.name AS ForeignKeyName,
    tp.name AS ParentTable,
    cp.name AS ParentColumn,
    tr.name AS ReferencedTable,
    cr.name AS ReferencedColumn
FROM sys.foreign_keys fk
INNER JOIN sys.tables tp ON fk.parent_object_id = tp.object_id
INNER JOIN sys.tables tr ON fk.referenced_object_id = tr.object_id
INNER JOIN sys.foreign_key_columns fkc ON fk.object_id = fkc.constraint_object_id
INNER JOIN sys.columns cp ON fkc.parent_object_id = cp.object_id AND fkc.parent_column_id = cp.column_id
INNER JOIN sys.columns cr ON fkc.referenced_object_id = cr.object_id AND fkc.referenced_column_id = cr.column_id
WHERE tp.name IN ('lithology_logs', 'sample_analyses')
ORDER BY tp.name, fk.name;
